#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt

# [X3D] VRML V3.1 utf8
# PROFILE Immersive
# [X3D] version=3.1
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.1.xsd
# [head]

# Import note: the following meta tags were created during Vrml97ToX3d translation. Please update or delete them as appropriate.
# META "title" "animated_patch22.x3d"
# META "description" "*enter description here, short-sentence summaries preferred*"
# META "creator" "*enter name of original author here*"
# META "translator" "Xeena VRML importer"
# META "imported" "11 February 2003"
# META "modified" "11 February 2003"
# META "version" "*enter version here*"
# META "reference" "*enter reference citation or relative/online url here*"
# META "reference" "*enter additional url/bibliographic reference information here*"
# META "rights" "*enter copyright information here* Example: Copyright (c) Web3D Consortium Inc. 2001"
# META "drawing" "*enter drawing filename/url here*"
# META "image" "*enter image filename/url here*"
# META "MovingImage" "*enter movie filename/url here*"
# META "photo" "*enter photo filename/url here*"
# META "subject" "*enter keywords here*"
# META "identifier" "*enter online url address for this file here*"
 ### Warning:  <meta name='identifier'/> title doesn't match <meta name='title' content='animated_patch22.x3d'/>
# META "generator" "X3D-Edit, http://www.web3d.org/x3d/content/README.X3D-Edit.html"
# META "generator" "Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"
# META "license" "../../license.html"

# [Scene] ========== ========== ==========

WorldInfo {
  info [ "Nurbs 2*2 Patch with animated controlPoint" ]
  title "Nurbs 2*2 animated"
}
EXTERNPROTO NurbsPatchSurface [ 
  exposedField SFInt32	uTessellation
  exposedField SFNode      texCoord
  field        SFInt32	vOrder
  field        MFFloat	vKnot
  exposedField MFFloat	weight
  field        MFFloat	uKnot
  exposedField MFVec3f	controlPoint
  exposedField SFInt32	vTessellation
  field        SFInt32	uDimension
  field        SFBool	solid
  field        SFBool	ccw
  field        SFInt32	uOrder
  field        SFInt32	vDimension
][
"urn:inet:blaxxun.com:node:NurbsPatchSurface"
"nurbs.wrl#NurbsPatchSurface"
"http://www.blaxxun.com/vrml/protos/nurbs.wrl#NurbsPatchSurface"
 ]
NavigationInfo {
  type [ "EXAMINE" "ANY"  ] 
   # transitionType [ "ANIMATE"  ] 
}
Group {
  children [
      Shape {
        appearance Appearance {
          material Material {
            diffuseColor 0.0 0.0 1.0
            emissiveColor 1.0 0.0 0.0
            specularColor 1.0 1.0 1.0
          }
          texture ImageTexture {
            url [ "texture.jpg" ]
          }
 ### Hint:  For maximum scene portability, append alternate online address for revised url=' "texture.jpg" "http://...address.../texture.jpg" '
          DEF nurb  NurbsPatchSurface {
 ### Error:  ProtoInstance NurbsPatchSurface has containerField='children' which is not appropriate for parent Appearance node. Allowed containerField values are fillProperties, lineProperties, material, metadata, texture, textureTransform.
            uTessellation  16
             ### Warning:  Improper initialization, no value provided for fieldValue 'texCoord'
            vOrder  2
            vKnot  [ 0.0 0.0 1.0 1.0 ]
             ### Warning:  Improper initialization, no value provided for fieldValue 'weight'
            uKnot  [ 0.0 0.0 1.0 1.0 ]
            controlPoint  [ -1.0 0.0 0.0
1.0 0.0 0.0
-1.0 1.0 0.0
1.0 1.0 0.0 ]
            uDimension  2
            vTessellation  16
            solid  FALSE
            uOrder  2
            ccw  FALSE
            vDimension  2
          }
 ### Error:  ProtoInstance containerField='children' is illegal value
        }
      }
  ]
}
DEF animate Script {
  field        SFNode      nurb     USE nurb
  eventIn      SFTime	setTime
  directOutput TRUE

	url [ "javascript:

        function setTime(value) {

			nurb.controlPoint[0].z = 2*Math.sin(value*2*Math.PI);		

			nurb.controlPoint[3].z = 2*Math.sin(value*2*Math.PI);		

	}

    
" ]
}
DEF TimeSource TimeSensor {
  cycleInterval 2.0
  loop TRUE
}
ROUTE TimeSource.fraction_changed TO animate.setTime
