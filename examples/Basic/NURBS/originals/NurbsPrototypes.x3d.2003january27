<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "http://www.web3d.org/specifications/x3d-3.0.dtd"
                     "/www.web3d.org/TaskGroups/x3d/translation/x3d-3.0.dtd">
<X3D>
  <head>
    <meta content="NurbsPrototypes.x3d" name="filename"/>
    <meta
      content="Non-Uniform Rational B-Spline (NURBS) prototype definitions." name="description"/>
    <meta
      content="Originally blaxxun.  X3D specification revisions by Don Brutzman, Charles Adams and Jeff Weekley." name="author"/>
    <meta content="Don Brutzman" name="translator"/>
    <meta content="2000" name="created"/>
    <meta content="18 March 2002" name="translated"/>
    <meta content="27 January 2003" name="revised"/>
    <meta content="under development" name="warning"/>
    <meta
      content="Not all NURBS nodes are prototyped here, and these implementations are not yet demonstrated." name="warning"/>
    <meta
      content="http://www.web3d.org/technicalinfo/specifications/ISO_IEC_19775/Part01/components/nurbs.html" name="reference"/>
    <meta content="http://www.blaxxun.com/vrml/protos/nurbs.wrl" name="reference"/>
    <meta content="NurbsPrototypesOriginal.x3d.txt" name="reference"/>
    <meta content="NURBS Prototypes" name="keywords"/>
    <meta
      content="http://www.web3d.org/TaskGroups/x3d/translation/examples/Nurbs/NurbsPrototypes.x3d" name="url"/>
    <meta content="Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html" name="generator"/>
  </head>
  <Scene>
    <ProtoDeclare
      appInfo="Contour2D node groups a set of curve segments &#10;(either NurbsCurve2D or ContourPolyline2D nodes) to a composite contour,&#10;in consecutive order according to the topology of the contour.&#10;The children shall form a closed loop with the&#10;first point of the first child repeated as the last point of the last child &#10;and the last point of a segment repeated as the first point of the consecutive one.&#10;"
      documentation="http://www.web3d.org/technicalinfo/specifications/ISO_IEC_19775/Part01/components/nurbs.html#Contour2D" name="Contour2D">
      <ProtoInterface>
        <field accessType="inputOutput" name="children" type="MFNode"/>
      </ProtoInterface>
      <ProtoBody>
        <Group DEF="RootContour2D">
          <IS>
            <connect nodeField="children" protoField="children"/>
          </IS>
        </Group><!--consider adding a Script here to check that the
          children nodes are solely of type NurbsCurbe2D and/or ContourPolyline2D--></ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="ContourPolyline2D">
      <ProtoInterface>
        <field accessType="inputOutput" name="point" type="MFVec2f"/>
      </ProtoInterface>
      <ProtoBody><!--Typical initial approach:  group all body nodes
          together, since rendering is only affected by first Prototype
          child. Then, map interface field(s) to dummy-node field(s)  so
          that a Script can USE and then manipulate them.--><Group>
          <Switch DEF="HideDummy" whichChoice="-1">
            <Shape>
              <Extrusion DEF="PointHolder">
                <IS>
                  <connect nodeField="crossSection" protoField="point"/>
                </IS>
              </Extrusion>
            </Shape>
          </Switch>
          <Script DEF="ScriptContourPolyline2D">
            <field accessType="inputOnly" name="PointHolder" type="SFNode">
              <Extrusion USE="PointHolder"/>
            </field>
          </Script>
        </Group>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="CoordinateDeformer">
      <ProtoInterface/>
      <ProtoBody/>
    </ProtoDeclare>
    <ProtoDeclare
      documentation="http://www.web3d.org/technicalinfo/specifications/ISO_IEC_19775/Part01/components/nurbs.html#NurbsCurve" name="NurbsCurve">
      <ProtoInterface>
        <field accessType="initializeOnly" appInfo="range [2, infinity)"
          name="order" type="SFInt32" value="3"/>
        <field accessType="inputOutput" name="controlPoint" type="MFVec3f"/>
        <field accessType="inputOutput" name="tessellation"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="knot" type="MFDouble"/>
        <field accessType="inputOutput" appInfo="range [0, infinity)"
          name="weight" type="MFDouble"/>
      </ProtoInterface>
      <ProtoBody>
        <IndexedLineSet DEF="NurbsCurveIls" coordIndex=" 1 2 3 -1 5 6 7 -1">
          <Coordinate DEF="_IS_1">
            <IS>
              <connect nodeField="point" protoField="controlPoint"/>
            </IS>
          </Coordinate>
        </IndexedLineSet>
        <Script DEF="NurbsCurveScript" directOutput="true">
          <field accessType="initializeOnly" name="ils" type="SFNode">
            <IndexedLineSet USE="NurbsCurveIls"/>
</field><![CDATA[javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var u,v, counter, number, Dimension;
			counter = 0;
			number = 0;
			Dimension = ils.coord.point.length;
			//Browser.print('Dimension ' + Dimension);
			var ind = new MFInt32();
			ind.length = Dimension + 1;

			for(counter=0; counter<Dimension;counter++)
			{
				//Browser.print('ils.point ' + ils.coord.point[counter]);
				ind[counter] = counter;
				//Browser.print('ils.ind ' + ind[counter]);
			}
			counter++;
			ind[counter] = -1;
			
			ils.set_coordIndex = ind;
	}]]></Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsCurve2D">
      <ProtoInterface/>
      <ProtoBody/>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsGroup">
      <ProtoInterface>
        <field accessType="inputOutput" name="tessellationScale"
          type="SFFloat" value="1.0"/>
        <field accessType="inputOnly" name="addChildren" type="MFNode"/>
        <field accessType="inputOutput" name="children" type="MFNode"/>
        <field accessType="inputOnly" name="removeChildren" type="MFNode"/>
        <field accessType="initializeOnly" name="bboxCenter"
          type="SFVec3f" value="0.0 0.0 0.0"/>
        <field accessType="initializeOnly" name="bboxSize"
          type="SFVec3f" value="-1.0 -1.0 -1.0"/>
      </ProtoInterface>
      <ProtoBody>
        <Group DEF="_IS_2">
          <IS>
            <connect nodeField="children" protoField="children"/>
            <connect nodeField="addChildren" protoField="addChildren"/>
            <connect nodeField="removeChildren" protoField="removeChildren"/>
            <connect nodeField="bboxCenter" protoField="bboxCenter"/>
            <connect nodeField="bboxSize" protoField="bboxSize"/>
          </IS>
        </Group>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsPositionInterpolator">
      <ProtoInterface>
        <field accessType="outputOnly" name="value_changed" type="SFVec3f"/>
        <field accessType="inputOnly" name="set_fraction" type="SFFloat"/>
        <field accessType="initializeOnly" name="order" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="knot" type="MFFloat"/>
        <field accessType="initializeOnly" name="keyValue" type="MFVec3f"/>
        <field accessType="inputOutput" name="fractionAbsolute"
          type="SFBool" value="true"/>
        <field accessType="inputOutput" name="keyWeight" type="MFFloat"/>
        <field accessType="inputOnly" name="set_keyValue" type="MFFloat"/>
        <field accessType="inputOnly" name="set_knot" type="MFFloat"/>
        <field accessType="inputOnly" name="set_order" type="MFFloat"/>
      </ProtoInterface>
      <ProtoBody>
        <PositionInterpolator DEF="pi"/>
        <Script DEF="NurbsPIScript" directOutput="true">
          <field accessType="initializeOnly" name="order" type="SFInt32"/>
          <field accessType="initializeOnly" name="knot" type="MFFloat"/>
          <field accessType="initializeOnly" name="keyValue" type="MFVec3f"/>
          <field accessType="initializeOnly" name="pi" type="SFNode">
            <PositionInterpolator USE="pi"/>
          </field>
          <IS>
            <connect nodeField="order" protoField="order"/>
            <connect nodeField="knot" protoField="knot"/>
            <connect nodeField="keyValue" protoField="keyValue"/>
</IS><![CDATA[javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var i;
			i=0;
			pi.set_keyValue = keyValue;
			var keys = new MFFloat();
			for(i=0; i<keyValue.length; i++)
			{
				keys[i] = knot[i + order - 1];
				//Browser.print('keyValue' + keyValue[i]);
				//Browser.print('key' + keys[i]);
			}
			pi.set_key = keys;
	}]]></Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsSurface">
      <ProtoInterface>
        <field accessType="inputOutput" name="uTessellation"
          type="SFInt32" value="0"/>
        <field accessType="inputOutput" name="texCoord" type="SFNode"/>
        <field accessType="initializeOnly" name="vOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="vKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="weight" type="MFFloat"/>
        <field accessType="initializeOnly" name="uKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="controlPoint" type="MFVec3f"/>
        <field accessType="inputOutput" name="vTessellation"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="uDimension"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="solid" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="ccw" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="uOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="vDimension"
          type="SFInt32" value="0"/>
      </ProtoInterface>
      <ProtoBody>
        <IndexedLineSet DEF="NurbsSurfaceIls" coordIndex=" 1 2 3 -1 5 6 7 -1">
          <Coordinate DEF="NurbsSurfaceIlsCoordinate">
            <IS>
              <connect nodeField="point" protoField="controlPoint"/>
            </IS>
          </Coordinate>
        </IndexedLineSet>
        <Script DEF="NurbsSurfaceScript" directOutput="true">
          <field accessType="initializeOnly" name="uDimension" type="SFInt32"/>
          <field accessType="initializeOnly" name="vDimension" type="SFInt32"/>
          <field accessType="initializeOnly" name="ils" type="SFNode">
            <IndexedLineSet USE="NurbsSurfaceIls"/>
          </field>
          <IS>
            <connect nodeField="uDimension" protoField="uDimension"/>
            <connect nodeField="vDimension" protoField="vDimension"/>
</IS><![CDATA[javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var u,v, counter, number;
			counter = 0;
			number = 0;
			var ind = new MFInt32();
			ind.length = 2*vDimension * uDimension + uDimension + vDimension;

			for(v=0; v<vDimension;v++)
			{
				for(u=0; u<uDimension;u++)
				{
					ind[counter] = number;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
		
			for(u=0; u<uDimension;u++)
			{
				for(v=0; v<vDimension;v++)
				{
					ind[counter] = v*uDimension + u;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
			
			ils.set_coordIndex = ind;

		}]]></Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsTextureSurface">
      <ProtoInterface>
        <field accessType="inputOutput" name="uTessellation"
          type="SFInt32" value="0"/>
        <field accessType="inputOutput" name="texCoord" type="SFNode"/>
        <field accessType="initializeOnly" name="vOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="vKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="weight" type="MFFloat"/>
        <field accessType="initializeOnly" name="uKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="controlPoint" type="MFVec3f"/>
        <field accessType="inputOutput" name="vTessellation"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="uDimension"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="solid" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="ccw" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="uOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="vDimension"
          type="SFInt32" value="0"/>
      </ProtoInterface>
      <ProtoBody>
        <IndexedLineSet DEF="NurbsSurfaceIls" coordIndex=" 1 2 3 -1 5 6 7 -1">
          <Coordinate DEF="NurbsSurfaceIlsCoordinate">
            <IS>
              <connect nodeField="point" protoField="controlPoint"/>
            </IS>
          </Coordinate>
        </IndexedLineSet>
        <Script DEF="NurbsSurfaceScript" directOutput="true">
          <field accessType="initializeOnly" name="uDimension" type="SFInt32"/>
          <field accessType="initializeOnly" name="vDimension" type="SFInt32"/>
          <field accessType="initializeOnly" name="ils" type="SFNode">
            <IndexedLineSet USE="NurbsSurfaceIls"/>
          </field>
          <IS>
            <connect nodeField="uDimension" protoField="uDimension"/>
            <connect nodeField="vDimension" protoField="vDimension"/>
</IS><![CDATA[javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var u,v, counter, number;
			counter = 0;
			number = 0;
			var ind = new MFInt32();
			ind.length = 2*vDimension * uDimension + uDimension + vDimension;

			for(v=0; v<vDimension;v++)
			{
				for(u=0; u<uDimension;u++)
				{
					ind[counter] = number;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
		
			for(u=0; u<uDimension;u++)
			{
				for(v=0; v<vDimension;v++)
				{
					ind[counter] = v*uDimension + u;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
			
			ils.set_coordIndex = ind;

		}]]></Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="TrimmedSurface">
      <ProtoInterface/>
      <ProtoBody/>
    </ProtoDeclare><!--legacy from blaxxun proposal--><ProtoDeclare name="NurbsCurve2ILS">
      <ProtoInterface>
        <field accessType="initializeOnly" name="order" type="SFInt32" value="3"/>
        <field accessType="inputOutput" name="controlPoint" type="MFVec3f"/>
        <field accessType="inputOutput" name="tessellation"
          type="SFInt32" value="10"/>
        <field accessType="initializeOnly" name="knot" type="MFFloat"/>
        <field accessType="inputOutput" name="weight" type="MFFloat"/>
      </ProtoInterface>
      <ProtoBody>
        <IndexedLineSet DEF="NurbsCurve2ILS_ILS" coordIndex=" 1 2 3 -1 5 6 7 -1">
          <Coordinate DEF="_IS_3">
            <IS>
              <connect nodeField="point" protoField="controlPoint"/>
            </IS>
          </Coordinate>
        </IndexedLineSet>
        <Transform DEF="NurbsCurve2IlsMtr">
          <Shape>
            <Appearance>
              <Material diffuseColor="1.0 0.0 0.0"/>
            </Appearance>
          </Shape>
        </Transform>
        <Script DEF="NurbsCurve2IlsScript" directOutput="true">
          <field accessType="initializeOnly" name="mtr" type="SFNode">
            <Transform USE="NurbsCurve2IlsMtr"/>
          </field>
          <field accessType="outputOnly" name="set_Children" type="MFNode"/>
          <field accessType="inputOutput" name="cvs" type="MFVec3f"/>
          <field accessType="initializeOnly" name="ils" type="SFNode">
            <IndexedLineSet USE="NurbsCurve2ILS_ILS"/>
          </field>
          <IS>
            <connect nodeField="cvs" protoField="controlPoint"/>
</IS><![CDATA[
javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var u,v, counter, number, Dimension;
			counter = 0;
			number = 0;
			Dimension = ils.coord.point.length;
			//Browser.print('Dimension ' + Dimension);
			var ind = new MFInt32();
			ind.length = Dimension + 1;

			for(counter=0; counter<Dimension;counter++)
			{
				//Browser.print('ils.point ' + ils.coord.point[counter]);
				ind[counter] = counter;
			}
			counter++;
			ind[counter] = -1;
			
			ils.set_coordIndex = ind;



			//------------------------------------------------------------------------------------------
			//					the little spheres
			//------------------------------------------------------------------------------------------
			var nodes = new MFNode();
			var mSphereString1 = new MFString('
			Transform {
				scale .1 .1 .1
				translation  
				');
				var mTranslation = new SFVec3f(1,1,1);
				var mSphereString2 = new MFString('
				children Shape { 
					appearance	Appearance {material Material {diffuseColor	1 0 0}}
					geometry Sphere	{}
				}
			}
			');

			var megaString = new MFString('');

			for (counter=0;counter<Dimension;counter++)
			{
				mTranslation = cvs[counter];
				Browser.print(mTranslation);
				megaString += mSphereString1;
				megaString += mTranslation;
				megaString += mSphereString2;
			}
			
			nodes = Browser.createVrmlFromString(megaString);			 
			set_Children = nodes;
		}
      
    	
      ]]></Script>
        <ROUTE fromField="set_Children" fromNode="NurbsCurve2IlsScript"
          toField="addChildren" toNode="NurbsCurve2IlsMtr"/>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name="NurbsSurface2ILS">
      <ProtoInterface>
        <field accessType="inputOutput" name="uTessellation"
          type="SFInt32" value="0"/>
        <field accessType="inputOutput" name="texCoord" type="SFNode"/>
        <field accessType="initializeOnly" name="vOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="vKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="weight" type="MFFloat"/>
        <field accessType="initializeOnly" name="uKnot" type="MFFloat"/>
        <field accessType="inputOutput" name="controlPoint" type="MFVec3f"/>
        <field accessType="inputOutput" name="vTessellation"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="solid" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="ccw" type="SFBool" value="true"/>
        <field accessType="initializeOnly" name="uOrder" type="SFInt32" value="3"/>
        <field accessType="initializeOnly" name="uDimension"
          type="SFInt32" value="0"/>
        <field accessType="initializeOnly" name="vDimension"
          type="SFInt32" value="0"/>
      </ProtoInterface>
      <ProtoBody>
        <Transform>
          <Shape>
            <Appearance>
              <Material diffuseColor="1.0 0.0 0.0" emissiveColor="1.0 0.0 0.0"/>
            </Appearance>
            <IndexedLineSet DEF="ils" coordIndex=" 1 2 3 -1 5 6 7 -1">
              <Coordinate DEF="_IS_4">
                <IS>
                  <connect nodeField="point" protoField="controlPoint"/>
                </IS>
              </Coordinate>
            </IndexedLineSet>
          </Shape>
        </Transform>
        <Transform DEF="mtr">
          <Shape>
            <Appearance>
              <Material diffuseColor="1.0 0.0 0.0"/>
            </Appearance>
          </Shape>
        </Transform>
        <Script DEF="s" directOutput="true">
          <field accessType="outputOnly" name="set_Children" type="MFNode"/>
          <field accessType="initializeOnly" name="ils" type="SFNode">
            <IndexedLineSet USE="ils"/>
          </field>
          <field accessType="initializeOnly" name="mtr" type="SFNode">
            <Transform USE="mtr"/>
          </field>
          <field accessType="inputOutput" name="cvs" type="MFVec3f"/>
          <field accessType="initializeOnly" name="uDimension" type="SFInt32"/>
          <field accessType="initializeOnly" name="vDimension" type="SFInt32"/>
          <IS>
            <connect nodeField="cvs" protoField="controlPoint"/>
            <connect nodeField="uDimension" protoField="uDimension"/>
            <connect nodeField="vDimension" protoField="vDimension"/>
</IS><![CDATA[javascript:
        function initialize() {
			//Browser.print('Sorry, your browser does not support NURBS nodes');
			var u,v, counter, number;
			counter = 0;
			number = 0;
			var ind = new MFInt32();
			ind.length = 2*vDimension * uDimension + uDimension + vDimension;

			for(v=0; v<vDimension;v++)
			{
				for(u=0; u<uDimension;u++)
				{
					ind[counter] = number;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
		
			for(u=0; u<uDimension;u++)
			{
				for(v=0; v<vDimension;v++)
				{
					ind[counter] = v*uDimension + u;
					counter++;
					number++;
				}
				ind[counter] = -1; counter++;
			}
			
			ils.set_coordIndex = ind;

			//------------------------------------------------------------------------------------------
			//					the little spheres
			//------------------------------------------------------------------------------------------
			var nodes = new MFNode();
			var mSphereString1 = new MFString('
			Transform {
				scale .03 .03 .03
				translation  
				');
				var mTranslation = new SFVec3f(1,1,1);
				var mSphereString2 = new MFString('
				children Shape { 
					appearance	Appearance {material Material {diffuseColor	1 0 0}}
					geometry Sphere	{}
				}
			}
			');

			var megaString = new MFString('');

			for (counter=0;counter<uDimension*vDimension;counter++)
			{
				mTranslation = cvs[counter];
				Browser.print(mTranslation);
				megaString += mSphereString1;
				megaString += mTranslation;
				megaString += mSphereString2;
			}
			
			nodes = Browser.createVrmlFromString(megaString);			 
			set_Children = nodes;
		}
      ]]></Script>
        <ROUTE fromField="set_Children" fromNode="s"
          toField="addChildren" toNode="mtr"/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
